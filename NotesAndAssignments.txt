Labs

Day Three
----------

Morning Lab

1. Create a getAllChirps method for a given user and return the chirp representations in a collection.
2. Add a self link to ChripRepresetnation and test using postman. 

Day Two Homework
----------------

1. Create a ChripRepresentation object containing only the ChirpId and Content Fields.
   a. consider representation the chirp id as a string instead of an object

2. Create a ChirpResource class to handling creating and retrieving single chirps. You may need to
   correct or add code the example on how create a chirp post.
   
   POST http://localhost:8080/chirps/{username} -- create a chirp  
   GET http://localhost:8080/chirps/{username}/{id} -- get a chirp (this is the format for location URI too)

3. Annotate the ChirpRepresentation class for XML and JSON formatting. Create test cases to confirm both XML and JSON formats work.



Day Two Lunch
--------------

Fix code on class-4037 branch so it returns a status code of 
Bad Request when detecting a duplicate username. Note the exception thrown is 
DuplicateEntityException.


----

Notes -- API Design

Preference for create is plural entity name only in URI path
METHOD is POST or PUT.  

URI: http://localhost:8080/users
METHOD: POST

Location Response Header: http://localhost:8080/users/student

Retrieve a single user
URI: http://localhost:8080/users/{username}
METHOD: GET
CONTENT-TYPE: application/xml, application/json, text/plain
RETURNS a user representation
  realname : String
  username : String

Retrieve all users
URI: http://localhost:8080/users
METHOD: GET
RETURNs a collection of users 
{
   { 
    username : String
    realname : String
    } 
    ...
}



REST AnitPatterns for URI composition -- don't follow these
URI  http://localhost:8080/create
URI: http://localhost:8080/users.json
URI: http://localhost:8080/users.xml
